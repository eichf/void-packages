# Template file for 'nginx'
pkgname=nginx
version=1.8.1
revision=2
makedepends="pcre-devel libressl-devel $(vopt_if geoip geoip-devel)"
if [ "$CROSS_BUILD" ]; then
	# fake configure run on host
	hostmakedepends=$makedepends
fi
conf_files="
	/etc/nginx/fastcgi.conf
	/etc/nginx/fastcgi_params
	/etc/nginx/koi-win
	/etc/nginx/koi-utf
	/etc/nginx/mime.types
	/etc/nginx/nginx.conf
	/etc/nginx/scgi_params
	/etc/nginx/uwsgi_params
	/etc/nginx/win-utf"
system_accounts="nginx"
nginx_homedir="/var/tmp/nginx"
make_dirs="
	/var/log/nginx 0750 root root
	/var/tmp 1777 root root
	/var/tmp/nginx 0750 nginx root"
short_desc="A high performance web and reverse proxy server"
maintainer="Juan RP <xtraeme@voidlinux.eu>"
license="Simplified BSD"
homepage="http://nginx.org"
distfiles="http://nginx.org/download/nginx-$version.tar.gz"
checksum=8f4b3c630966c044ec72715754334d1fdf741caa1d5795fb4646c27d09f797b7

build_options="geoip"
build_options_default="geoip"

do_configure() {
	local cfgdir=/etc/nginx
	local tmpdir=/var/tmp/nginx

	if [ "$CROSS_BUILD" ]; then
		unset CC CPP LD CFLAGS CPPFLAGS LDFLAGS
	fi

	./configure --prefix=${cfgdir} \
		--conf-path=${cfgdir}/nginx.conf \
		--sbin-path=/usr/bin/nginx \
		--pid-path=/run/nginx.pid \
		--lock-path=/var/lock/nginx.lock \
		--user=nginx --group=nginx \
		--http-log-path=/var/log/nginx/access.log \
		--error-log-path=/var/log/nginx/error.log \
		--http-client-body-temp-path=${tmpdir}/client-body \
		--http-proxy-temp-path=${tmpdir}/proxy \
		--http-fastcgi-temp-path=${tmpdir}/fastcgi \
		--http-scgi-temp-path=${tmpdir}/scgi \
		--http-uwsgi-temp-path=${tmpdir}/uwsgi \
		--with-imap --with-imap_ssl_module \
		--with-ipv6 --with-pcre-jit \
		--with-file-aio \
		--with-http_gunzip_module \
		--with-http_spdy_module \
		--with-http_dav_module \
		--with-http_gzip_static_module \
		--with-http_realip_module \
		--with-http_ssl_module \
		--with-http_stub_status_module \
		$(vopt_with geoip http_geoip_module)

	if [ "$CROSS_BUILD" ]; then
		case "$XBPS_TARGET_MACHINE" in
			arm*) cp ${FILESDIR}/ngx_auto_config.h.armv6l objs/ngx_auto_config.h;;
		esac
	fi
}

do_build() {
	make ${makejobs} CC="${CC}" LD="${LD}" CFLAGS="${CFLAGS}" LDFLAGS="${LDFLAGS}"
}
do_install() {
	make DESTDIR=$DESTDIR install

	sed -e 's|\<user\s\+\w\+;|user html;|g' \
		-e '44s|html|/usr/share/nginx/html|' \
		-e '54s|html|/usr/share/nginx/html|' \
		-i $DESTDIR/etc/nginx/nginx.conf
	rm $DESTDIR/etc/nginx/*.default

	vmkdir usr/share/nginx
	mv $DESTDIR/etc/nginx/html/ $DESTDIR/usr/share/nginx

	vlicense LICENSE
	vsv nginx
}
